#!/usr/bin/python
# coding: utf8

import os, sys

if (len(sys.argv) != 2):
	print("script must take one numeric argument like:\n%s 5" %(sys.argv[0]));
	exit (1);

i = (int)(sys.argv[1]);

loc = \
[[50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 555, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1200, 1400, 1600, 1800, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 25000, 25700, 25800, 25900,
26000, 26100, 26200, 26226],
\
[50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 555, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1200, 1400, 1600, 1800, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 24100, 24200, 24250, 24300, 24366],
\
[50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 555, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1200, 1400, 1600, 1800, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 25000, 25100, 25200, 25400, 25600, 25902],
\
[50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 555, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1200, 1400, 1600, 1800, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 25000, 25100, 25200, 25400, 25600, 26000,
27000, 28000, 29000, 30000, 31000, 32000, 32500, 32700, 32900, 33000, 33060],
\
[50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 555, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1200, 1400, 1600, 1800, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 24100, 24200, 24250, 24300, 24366],
\
[50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 555, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1200, 1400, 1600, 1800, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 24100, 24200, 24250, 24300, 24366],
\
[50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 555, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1200, 1400, 1600, 1800, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
5200, 5300, 5600, 5700, 5800, 5843],
\
[50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 555, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1200, 1400, 1600, 1800, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 25000, 26000, 27000, 28000, 28050, 28100, 28150, 28200, 28224],
\
[50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 555, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1200, 1400, 1600, 1800, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 25000, 25700, 25800, 25900,
26000, 26100, 26200, 26226],
\
[50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 555, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1200, 1400, 1600, 1800, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 24100, 24200, 24250, 24300, 24366],
\
[50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 555, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1200, 1400, 1600, 1800, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 11000, 12000, 13000, 14000, 15000, 16000, 17000, 18000, 19000, 20000, 21000, 22000, 23000, 24000, 24100, 24200, 24250, 24300, 24366]];

offset = \
[[8, 71],
[6, 69],
[6, 69],
[6, 69],
[6, 69],
[6, 69],
[6, 69],
[6, 69],
[6, 69],
[6, 69],
[6, 69]];


if ((i > len(loc)) or i == 0):
	print("arg value is FALSE.");
	exit (1);
i-=1;

j = 0;
while (j < len(loc[i])):

	#cu_1 = "sed -ne '%i, %ip' txt%i > txt.temp%i" %(offset[i][0], offset[i][1], loc[i][j], loc[i][j]);
	#cu_2 = "sed -ne '%i, %ip' _txt%i > _txt.temp%i" %(offset[i][0], offset[i][1], loc[i][j], loc[i][j]);
	#print(cu_1);
	#print(cu_2);
	#os.system(cu_1);
	#os.system(cu_2);


	#mv_1 = "mv _txt.temp%i _txt%i" %(loc[i][j], loc[i][j]);
	#mv_2 = "mv txt.temp%i txt%i" %(loc[i][j], loc[i][j]);
	#print(mv_1);
	#print(mv_2);
	#os.system(mv_1);
	#os.system(mv_2);


	string = "diff _txt%i txt%i" %(loc[i][j], loc[i][j]);
	print(string);
	j+=1;
	os.system(string);

exit (0);
